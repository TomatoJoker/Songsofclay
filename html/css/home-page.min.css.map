{"version":3,"sources":["base/_variables.scss","base/_mixin.scss","layouts/_hero.scss"],"names":[],"mappings":"AAcA,MACE,QAAA,MACA,cAAA,OACA,gBAAA,YACA,UAAA,KACA,KAAA,IC+VF,oBACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAxUA,0CAsUF,oBAII,mBAAA,WAAA,sBAAA,OAAA,mBAAA,IAAA,eAAA,KCtXJ,MACE,YAAA,MACA,eAAA,KACA,SAAA,SACA,QAAA,EDwCA,0CC5CF,MAOI,YAAA,MACA,eAAA,OAGF,YACE,YAAA,KACA,aAAA,KACA,SAAA,SACA,QAAA,EDyBF,0CC7BA,YAOI,MAAA,MAIJ,oBACE,IAAA,KAEA,WAAA,MACA,UAAA,MDkBF,0CCtBA,oBAOI,IAAA,KACA,WAAA,MAIJ,YACE,iBAAA,EAAA,kBAAA,EAAA,UAAA,EAGF,cACE,WAAA,KDKF,0CCNA,cAII,WAAA,MAIJ,aACE,SAAA,SACA,QAAA,EDJF,0CCOA,uBAGI,KAAA,kBACA,IAAA,QDXJ,0CCgBA,sBAGI,KAAA,kBACA,IAAA,QDpBJ,0CCyBA,oBAGI,KAAA,kBACA,IAAA,MD7BJ,0CCkCA,oBAGI,KAAA,kBACA,IAAA","file":"home-page.min.css","sourcesContent":["// Colors\n$light: #fff;\n$black: #000;\n$decor: #3C91DC;\n$transparent: rgba(255, 255, 255, 0);\n\n// media sizes\n$desktop: 1200;\n\n// animation\n$speed: 300ms;\n$speed-large: 1800ms;\n$time-function: ease-in-out;\n\n:root {\n  --speed: #{$speed};\n  --speed-large: #{$speed-large};\n  --time-function: #{$time-function};\n  --desktop: #{$desktop};\n  --vh: 1vh;\n}\n\n//layout\n$padding: 20px;\n$desktop-width: 1286px;\n$site-container: $desktop-width + ($padding * 2);\n\n","\n@mixin transition($property: all, $speed: $speed, $time-function: $time-function) {\n  transition-property: $property;\n  transition-duration: $speed;\n  transition-timing-function: $time-function;\n}\n\n/* FONT SourceSansPro */\n//@mixin fl {font-family: 'Montserrat-Light',sans-serif;}\n//@mixin fr {font-family: 'Montserrat-Regular',sans-serif;}\n//@mixin fm {font-family: 'Montserrat-Medium',sans-serif;}\n//@mixin fdb {font-family: 'Montserrat-SemiBold',sans-serif;}\n//@mixin fb {font-family: 'Montserrat-Bold',sans-serif;}\n\n/*images*/\n\n@mixin cover {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%; }\n\n\n@mixin absolute-center {\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%);\n}\n\n@mixin absolute-centerX {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n@mixin absolute-centerY {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/*=======================START-MEDIA=====================*/\n@mixin media($width) {\n  @media only screen and (max-width: $width+ \"px\") {\n    @content; } }\n\n@mixin min-media($width) {\n  @media only screen and (min-width: $width+ \"px\") {\n    @content; } }\n\n/*=======================END-MEDIA=====================*/\n//placeholder\n@mixin placeholder {\n  &::-webkit-input-placeholder { @content; }\n  &:-moz-placeholder           { @content; }\n  &::-moz-placeholder          { @content; }\n  &:-ms-input-placeholder      { @content; }\n}\n\n// font size\n\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\n  #{$property}: #{$max-size}#{$unit};\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\n  @media (max-width: #{$min-width}#{$unit}) {\n    #{$property}: #{$min-size}#{$unit}; }\n  @media (min-width: #{$max-width}#{$unit}) {\n    #{$property}: #{$max-size}#{$unit}; } }\n\n@function decimal-round($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n    @warn '#{ $number } is not a number.';\n    @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n    @warn '#{ $digits } is not a number.';\n    @return $number;\n  } @else if not unitless($digits) {\n    @warn '#{ $digits } has a unit.';\n    @return $number;\n  }\n  @if $digits > 0 {\n    @for $i from 1 through $digits {\n      $n: $n * 10;\n    }\n  }\n  @if $mode == round {\n    @return round($number * $n) / $n;\n  } @else if $mode == ceil {\n    @return ceil($number * $n) / $n;\n  } @else if $mode == floor {\n    @return floor($number * $n) / $n;\n  } @else {\n    @warn '#{ $mode } is undefined keyword.';\n    @return $number;\n  }\n}\n\n@mixin font-settings($font-size, $light-height, $round-light-height: 2) {\n  font-size: $font-size + px;\n  line-height: decimal-round($light-height / $font-size, $round-light-height);\n}\n\n// end font size\n\n\n/* media breakpoint mixin */\n@mixin media-breakpoint-up($name) {\n  @if map_has_key($breakpoint, $name) {\n    @media (min-width: map_get($breakpoint, $name)) {\n      @content;\n    }\n  } @else {\n    @media (min-width: $name) {\n      @content;\n    }\n  }\n}\n\n@mixin multi-transition($speed: $speed, $time-function: $time-function, $properties-list...) {\n  transition-duration: $speed;\n  transition-timing-function: $time-function;\n  transition-property: $properties-list;\n}\n\n@mixin size($width, $height: $width) {\n  width: $width + px;\n  height: $height + px;\n}\n\n@mixin total-width($width) {\n  min-width: $width + px;\n  max-width: $width + px;\n}\n\n@mixin total-height($height) {\n  min-width: $heigh + px;\n  max-width: $heigh + px;\n}\n\n// fonts\n@mixin font($weight, $style, $fontName, $fileName, $folderName: $fontName) {\n  @font-face {\n    font-family: #{$fontName};\n    font-display: swap;\n    src: url(\"../fonts/#{$folderName}/#{$fileName}.woff\") format(\"woff\"),\n         url(\"../fonts/#{$folderName}/#{$fileName}.woff2\") format(\"woff2\");\n    font-weight: #{$weight};\n    font-style: #{$style};\n  }\n}\n\n// hover\n@mixin hover($speed: $speed, $time-function: $time-function, $properties...) {\n  transition-timing-function: $time-function;\n  transition-duration: $speed;\n  transition-property: if(length($properties) > 0, $properties, all);\n  @media (any-hover: hover) {\n    &:hover {\n      @content;\n    }\n  }\n}\n\n// hide\n@mixin none() {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n}\n\n// gap\n@mixin gap($property, $value) {\n  @if $property == column {\n    @supports (column-gap: $value) {\n      column-gap: $value;\n    }\n    @supports not (column-gap: $value) {\n      margin-right: calc( 0px - (#{$value} / 2));\n      margin-left: calc( 0px - (#{$value} / 2));\n      & > * {\n        margin-right: calc(#{$value} / 2);\n        margin-left: calc(#{$value} / 2);\n      }\n    }\n  } @else if $property == row {\n    @supports (row-gap: $value) {\n      row-gap: $value;\n    }\n    @supports not (row-gap: $value) {\n      & {\n        margin-top: -$value;\n      }\n      & > * {\n        margin-top: $value;\n      }\n    }\n  } @else if $property == gap {\n    @supports (gap: $value) {\n      gap: $value;\n    }\n    @supports not (gap: $value) {\n      margin-right: calc(0px - (#{$value} / 2));\n      margin-left: calc(0px - (#{$value} / 2));\n      margin-top: -$value;\n      & > * {\n        margin-right: calc(#{$value} / 2);\n        margin-left: calc(#{$value} / 2);\n        margin-top: $value;\n      }\n    }\n  }\n}\n\n// supports\n@mixin supports($property, $value) {\n  @supports ($property: $value) {\n    #{$property}: $value;\n  }\n  @supports not ($property: $value) {\n    @content;\n  }\n}\n\n// grid\n@mixin grid-col($column) {\n  &__col-#{$column} {\n    grid-template-columns: repeat(#{$column}, 1fr);\n  }\n}\n\n// flex-basis\n@mixin flex-basis-responsive($number, $gap) {\n  flex-basis: calc((100% - #{$number - 1} * #{$gap}) / #{$number});\n}\n\n@mixin line-clamp($clamp, $height: none) {\n  display: -webkit-box;\n  -webkit-line-clamp: $clamp;\n  -webkit-box-orient: vertical;\n  text-overflow: ellipsis;\n  max-height: $height;\n  overflow: hidden;\n}\n\n//@mixin gap($value-column, $value-row: $value-column) {\n//  @if $value-row == 0 {\n//    & {\n//      margin-right: calc( 0px - (#{$value-column} / 2));\n//      margin-left: calc( 0px - (#{$value-column} / 2));\n//    }\n//    & > * {\n//      margin-right: calc(#{$value-column} / 2);\n//      margin-left: calc(#{$value-column} / 2);\n//    }\n//  }\n//  @else if $value-column == 0 {\n//    & {\n//      margin-top: -$value-row;\n//    }\n//    & > * {\n//      margin-top: $value-row;\n//    }\n//  }\n//  @else {\n//    & {\n//      margin-left: calc(0px - #{$value-column} / 2);\n//      margin-right: calc(0px - #{$value-column} / 2);\n//      margin-top: -$value-row;\n//    }\n//    & > * {\n//      margin-left: calc(#{$value-column} / 2);\n//      margin-right: calc(#{$value-column} / 2);\n//      margin-top: $value-row;\n//    }\n//  }\n//}\n\n@function decimal-round($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n    @warn '#{ $number } is not a number.';\n    @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n    @warn '#{ $digits } is not a number.';\n    @return $number;\n  } @else if not unitless($digits) {\n    @warn '#{ $digits } has a unit.';\n    @return $number;\n  }\n  @if $digits > 0 {\n    @for $i from 1 through $digits {\n      $n: $n * 10;\n    }\n  }\n  @if $mode == round {\n    @return round($number * $n) / $n;\n  } @else if $mode == ceil {\n    @return ceil($number * $n) / $n;\n  } @else if $mode == floor {\n    @return floor($number * $n) / $n;\n  } @else {\n    @warn '#{ $mode } is undefined keyword.';\n    @return $number;\n  }\n}\n\n@mixin transform-center {\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n}\n\n@mixin transformY-center {\n  position: absolute;\n  transform: translateY(-50%);\n  top: 50%;\n}\n\n@mixin transformX-center {\n  position: absolute;\n  transform: translateX(-50%);\n  left: 50%;\n}\n\n%link {\n  position: relative;\n  display: inline-block;\n\n  &:after {\n    content: '';\n    position: absolute;\n    background: currentColor;\n    height: 1px;\n    bottom: 1px;\n    left: 0px;\n    width: 100%;\n    transition: inherit;\n    transform: scaleX(0);\n  }\n\n  @include hover {\n    &:after {\n      transform: scaleX(1);\n    }\n  }\n\n}\n%is-hidden {\n  opacity: 0;\n  visibility: hidden;\n  pointer-events: none;\n}\n%is-visible {\n  opacity: 1;\n  pointer-events: auto;\n  visibility: visible;\n}\n\n%card-row {\n  display: flex;\n  flex-direction: column;\n  @include min-media($desktop) {\n    flex-direction: row;\n  }\n}",".hero {\n  padding-top: 137px;\n  padding-bottom: 48px;\n  position: relative;\n  z-index: 1;\n\n  @include min-media($desktop) {\n    padding-top: 200px;\n    padding-bottom: 163px;\n  }\n\n  &__icon {\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    z-index: 2;\n\n    @include media($desktop) {\n      width: 100%;\n    }\n  }\n\n  &__info-wrapper {\n    gap: 28px;\n    @extend %card-row;\n    margin-top: 217px;\n    max-width: 470px;\n\n    @include min-media($desktop) {\n      gap: 72px;\n      margin-top: 63px;\n    }\n  }\n\n  &__info {\n    flex-grow: 1;\n  }\n\n  &__button {\n    margin-top: 28px;\n\n    @include min-media($desktop) {\n      margin-top: 41px;\n    }\n  }\n\n  &__decor {\n    position: absolute;\n    z-index: 1;\n  }\n\n  &__decor-top-right {\n\n    @include min-media($desktop) {\n      left: calc(50% + 133px);\n      top: -328px;\n    }\n\n  }\n\n  &__decor-top-left {\n\n    @include min-media($desktop) {\n      left: calc(50% - 143px);\n      top: -135px;\n    }\n\n  }\n\n  &__decor-center {\n\n    @include min-media($desktop) {\n      left: calc(50% + 146px);\n      top: 24px;\n    }\n\n  }\n\n  &__decor-bottom {\n\n    @include min-media($desktop) {\n      left: calc(50% - 280px);\n      top: 210px;\n    }\n\n  }\n}"]}