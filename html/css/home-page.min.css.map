{"version":3,"sources":["base/_variables.scss","base/_mixin.scss","components/_info-box.scss","layouts/_hero.scss","layouts/_about.scss","layouts/_section-decor.scss","layouts/_details.scss"],"names":[],"mappings":"AAeA,MACE,QAAA,MACA,cAAA,OACA,gBAAA,YACA,UAAA,KACA,KAAA,ICqWF,oBACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAxUA,0CAsUF,oBAII,mBAAA,WAAA,sBAAA,OAAA,mBAAA,IAAA,eAAA,KC7XJ,UACE,UAAA,MACA,YAAA,MAEA,kBAAA,gBAEE,WAAA,KCNJ,MACE,YAAA,MACA,eAAA,KACA,SAAA,SACA,QAAA,EF+CA,0CEnDF,MAOI,YAAA,OAGF,YACE,YAAA,KACA,aAAA,KACA,SAAA,SACA,QAAA,EFiCF,0CErCA,YAOI,MAAA,KACA,OAAA,MAIJ,oBACE,IAAA,KAEA,WAAA,MACA,UAAA,MFyBF,0CE7BA,oBAOI,IAAA,KACA,WAAA,MAIJ,YACE,iBAAA,EAAA,kBAAA,EAAA,UAAA,EAGF,cACE,WAAA,KFYF,0CEbA,cAII,WAAA,MAIJ,aACE,SAAA,SACA,QAAA,EFDF,0CEDA,aAKI,OAAA,MAIJ,uBACE,KAAA,iBACA,IAAA,OFVF,0CEQA,uBAKI,MAAA,OFTJ,0CEIA,uBASI,KAAA,kBACA,IAAA,QAKJ,sBACE,KAAA,kBACA,IAAA,MACA,QAAA,EF1BF,0CEuBA,sBAMI,MAAA,OFzBJ,0CEmBA,sBAUI,KAAA,kBACA,IAAA,MAMJ,oBACE,IAAA,KACA,KAAA,iBF1CF,0CEwCA,oBAKI,MAAA,OFzCJ,0CEoCA,oBASI,KAAA,kBACA,IAAA,OAKJ,oBACE,IAAA,MACA,KAAA,kBFzDF,0CEuDA,oBAKI,MAAA,OFxDJ,0CEmDA,oBASI,KAAA,kBACA,IAAA,OChHN,OACE,YAAA,MACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAEA,aACE,WAAA,KH6CF,0CG1CA,oBAGI,QAAA,MHmCJ,0CG/BA,qBAGI,QAAA,MCnBN,eACE,SAAA,SACA,QAAA,GACA,QAAA,YACA,QAAA,YACA,QAAA,KACA,mBAAA,SACA,sBAAA,OACA,mBAAA,OACA,eAAA,OAEA,wBACE,iBAAA,EAAA,kBAAA,EAAA,UAAA,EACA,MAAA,KAGF,mBAAA,oBAEE,SAAA,SACA,OAAA,EACA,KAAA,EACA,MAAA,KAGF,mBACE,OAAA,KAGF,oBACE,OAAA,KC3BF,eACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,cAAA,KAAA,UAAA,KACA,mBAAA,KAAA,gBAAA,KAAA,WAAA,KACA,WAAA,MACA,UAAA,MAGF,eACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,kBAAA,MAAA,eAAA,MAAA,YAAA,WACA,IAAA,KACA,wBAAA,uBAAA,WAAA,uBAJD,mBAOG,kBAAA,EAAA,YAAA","file":"home-page.min.css","sourcesContent":["// Colors\r\n$light: #fff;\r\n$black: #000;\r\n$decor: #3C91DC;\r\n$light-section: #c8c8c6;\r\n$transparent: rgba(255, 255, 255, 0);\r\n\r\n// media sizes\r\n$desktop: 1200;\r\n\r\n// animation\r\n$speed: 300ms;\r\n$speed-large: 1800ms;\r\n$time-function: ease-in-out;\r\n\r\n:root {\r\n  --speed: #{$speed};\r\n  --speed-large: #{$speed-large};\r\n  --time-function: #{$time-function};\r\n  --desktop: #{$desktop};\r\n  --vh: 1vh;\r\n}\r\n\r\n//layout\r\n$padding: 20px;\r\n$desktop-width: 1286px;\r\n$site-container: $desktop-width + ($padding * 2);\r\n\r\n","\r\n@mixin transition($property: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-property: $property;\r\n  transition-duration: $speed;\r\n  transition-timing-function: $time-function;\r\n}\r\n\r\n/* FONT SourceSansPro */\r\n//@mixin fl {font-family: 'Montserrat-Light',sans-serif;}\r\n//@mixin fr {font-family: 'Montserrat-Regular',sans-serif;}\r\n//@mixin fm {font-family: 'Montserrat-Medium',sans-serif;}\r\n//@mixin fdb {font-family: 'Montserrat-SemiBold',sans-serif;}\r\n//@mixin fb {font-family: 'Montserrat-Bold',sans-serif;}\r\n\r\n/*images*/\r\n\r\n@mixin cover {\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 50% 50%; }\r\n\r\n@mixin is-animated {\r\n  @include min-media($desktop) {\r\n    .is-animated & {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin absolute-center {\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%);\r\n}\r\n\r\n@mixin absolute-centerX {\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n@mixin absolute-centerY {\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/*=======================START-MEDIA=====================*/\r\n@mixin media($width) {\r\n  @media only screen and (max-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n@mixin min-media($width) {\r\n  @media only screen and (min-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n/*=======================END-MEDIA=====================*/\r\n//placeholder\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder { @content; }\r\n  &:-moz-placeholder           { @content; }\r\n  &::-moz-placeholder          { @content; }\r\n  &:-ms-input-placeholder      { @content; }\r\n}\r\n\r\n// font size\r\n\r\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\r\n  #{$property}: #{$max-size}#{$unit};\r\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\r\n  @media (max-width: #{$min-width}#{$unit}) {\r\n    #{$property}: #{$min-size}#{$unit}; }\r\n  @media (min-width: #{$max-width}#{$unit}) {\r\n    #{$property}: #{$max-size}#{$unit}; } }\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n@mixin font-settings($font-size, $light-height, $round-light-height: 2) {\r\n  font-size: $font-size + px;\r\n  line-height: decimal-round($light-height / $font-size, $round-light-height);\r\n}\r\n\r\n// end font size\r\n\r\n\r\n/* media breakpoint mixin */\r\n@mixin media-breakpoint-up($name) {\r\n  @if map_has_key($breakpoint, $name) {\r\n    @media (min-width: map_get($breakpoint, $name)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @media (min-width: $name) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin multi-transition($speed: $speed, $time-function: $time-function, $properties-list...) {\r\n  transition-duration: $speed;\r\n  transition-timing-function: $time-function;\r\n  transition-property: $properties-list;\r\n}\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width + px;\r\n  height: $height + px;\r\n}\r\n\r\n@mixin total-width($width) {\r\n  min-width: $width + px;\r\n  max-width: $width + px;\r\n}\r\n\r\n@mixin total-height($height) {\r\n  min-width: $heigh + px;\r\n  max-width: $heigh + px;\r\n}\r\n\r\n// fonts\r\n@mixin font($weight, $style, $fontName, $fileName, $folderName: $fontName) {\r\n  @font-face {\r\n    font-family: #{$fontName};\r\n    font-display: swap;\r\n    src: url(\"../fonts/#{$folderName}/#{$fileName}.woff\") format(\"woff\"),\r\n         url(\"../fonts/#{$folderName}/#{$fileName}.woff2\") format(\"woff2\");\r\n    font-weight: #{$weight};\r\n    font-style: #{$style};\r\n  }\r\n}\r\n\r\n// hover\r\n@mixin hover($speed: $speed, $time-function: $time-function, $properties...) {\r\n  transition-timing-function: $time-function;\r\n  transition-duration: $speed;\r\n  transition-property: if(length($properties) > 0, $properties, all);\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// hide\r\n@mixin none() {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n  overflow: hidden;\r\n}\r\n\r\n// gap\r\n@mixin gap($property, $value) {\r\n  @if $property == column {\r\n    @supports (column-gap: $value) {\r\n      column-gap: $value;\r\n    }\r\n    @supports not (column-gap: $value) {\r\n      margin-right: calc( 0px - (#{$value} / 2));\r\n      margin-left: calc( 0px - (#{$value} / 2));\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n      }\r\n    }\r\n  } @else if $property == row {\r\n    @supports (row-gap: $value) {\r\n      row-gap: $value;\r\n    }\r\n    @supports not (row-gap: $value) {\r\n      & {\r\n        margin-top: -$value;\r\n      }\r\n      & > * {\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  } @else if $property == gap {\r\n    @supports (gap: $value) {\r\n      gap: $value;\r\n    }\r\n    @supports not (gap: $value) {\r\n      margin-right: calc(0px - (#{$value} / 2));\r\n      margin-left: calc(0px - (#{$value} / 2));\r\n      margin-top: -$value;\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// supports\r\n@mixin supports($property, $value) {\r\n  @supports ($property: $value) {\r\n    #{$property}: $value;\r\n  }\r\n  @supports not ($property: $value) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// grid\r\n@mixin grid-col($column) {\r\n  &__col-#{$column} {\r\n    grid-template-columns: repeat(#{$column}, 1fr);\r\n  }\r\n}\r\n\r\n// flex-basis\r\n@mixin flex-basis-responsive($number, $gap) {\r\n  flex-basis: calc((100% - #{$number - 1} * #{$gap}) / #{$number});\r\n}\r\n\r\n@mixin line-clamp($clamp, $height: none) {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $clamp;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  max-height: $height;\r\n  overflow: hidden;\r\n}\r\n\r\n//@mixin gap($value-column, $value-row: $value-column) {\r\n//  @if $value-row == 0 {\r\n//    & {\r\n//      margin-right: calc( 0px - (#{$value-column} / 2));\r\n//      margin-left: calc( 0px - (#{$value-column} / 2));\r\n//    }\r\n//    & > * {\r\n//      margin-right: calc(#{$value-column} / 2);\r\n//      margin-left: calc(#{$value-column} / 2);\r\n//    }\r\n//  }\r\n//  @else if $value-column == 0 {\r\n//    & {\r\n//      margin-top: -$value-row;\r\n//    }\r\n//    & > * {\r\n//      margin-top: $value-row;\r\n//    }\r\n//  }\r\n//  @else {\r\n//    & {\r\n//      margin-left: calc(0px - #{$value-column} / 2);\r\n//      margin-right: calc(0px - #{$value-column} / 2);\r\n//      margin-top: -$value-row;\r\n//    }\r\n//    & > * {\r\n//      margin-left: calc(#{$value-column} / 2);\r\n//      margin-right: calc(#{$value-column} / 2);\r\n//      margin-top: $value-row;\r\n//    }\r\n//  }\r\n//}\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n@mixin transform-center {\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n\r\n@mixin transformY-center {\r\n  position: absolute;\r\n  transform: translateY(-50%);\r\n  top: 50%;\r\n}\r\n\r\n@mixin transformX-center {\r\n  position: absolute;\r\n  transform: translateX(-50%);\r\n  left: 50%;\r\n}\r\n\r\n%link {\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    background: currentColor;\r\n    height: 1px;\r\n    bottom: 1px;\r\n    left: 0px;\r\n    width: 100%;\r\n    transition: inherit;\r\n    transform: scaleX(0);\r\n  }\r\n\r\n  @include hover {\r\n    &:after {\r\n      transform: scaleX(1);\r\n    }\r\n  }\r\n\r\n}\r\n%is-hidden {\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  pointer-events: none;\r\n}\r\n%is-visible {\r\n  opacity: 1;\r\n  pointer-events: auto;\r\n  visibility: visible;\r\n}\r\n\r\n%card-row {\r\n  display: flex;\r\n  flex-direction: column;\r\n  @include min-media($desktop) {\r\n    flex-direction: row;\r\n  }\r\n}",".info-box {\r\n  max-width: 315px;\r\n  margin-left: 144px;\r\n\r\n  &__button,\r\n  &__text {\r\n    margin-top: 39px;\r\n  }\r\n}",".hero {\r\n  padding-top: 118px;\r\n  padding-bottom: 48px;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  @include min-media($desktop) {\r\n    padding-top: 109px;\r\n  }\r\n\r\n  &__icon {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    @include media(1420) {\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n  }\r\n\r\n  &__info-wrapper {\r\n    gap: 28px;\r\n    @extend %card-row;\r\n    margin-top: 217px;\r\n    max-width: 470px;\r\n\r\n    @include min-media($desktop) {\r\n      gap: 72px;\r\n      margin-top: 63px;\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  &__button {\r\n    margin-top: 28px;\r\n\r\n    @include min-media($desktop) {\r\n      margin-top: 41px;\r\n    }\r\n  }\r\n\r\n  &__decor {\r\n    position: absolute;\r\n    z-index: 1;\r\n\r\n    @include media($desktop) {\r\n      height: auto;\r\n    }\r\n  }\r\n\r\n  &__decor-top-right {\r\n    left: calc(50% - 63px);\r\n    top: -144px;\r\n\r\n    @include media($desktop) {\r\n      width: 196px;\r\n    }\r\n\r\n    @include min-media($desktop) {\r\n      left: calc(50% + 133px);\r\n      top: -224px;\r\n    }\r\n\r\n  }\r\n\r\n  &__decor-top-left {\r\n    left: calc(50% - 190px);\r\n    top: -41px;\r\n    z-index: 3;\r\n\r\n    @include media($desktop) {\r\n      width: 188px;\r\n    }\r\n\r\n    @include min-media($desktop) {\r\n      left: calc(50% - 105px);\r\n      top: -6px;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  &__decor-center {\r\n    top: 41px;\r\n    left: calc(50% + 12px);\r\n\r\n    @include media($desktop) {\r\n      width: 174px;\r\n    }\r\n\r\n    @include min-media($desktop) {\r\n      left: calc(50% + 146px);\r\n      top: 133px;\r\n    }\r\n\r\n  }\r\n\r\n  &__decor-bottom {\r\n    top: 146px;\r\n    left: calc(50% - 208px);\r\n\r\n    @include media($desktop) {\r\n      width: 352px;\r\n    }\r\n\r\n    @include min-media($desktop) {\r\n      left: calc(50% - 280px);\r\n      top: 319px;\r\n    }\r\n\r\n  }\r\n}",".about {\r\n  padding-top: 163px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &__icon {\r\n    margin-top: auto;\r\n  }\r\n\r\n  &__icon-mobile {\r\n\r\n    @include min-media($desktop) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &__icon-desktop {\r\n\r\n    @include media($desktop) {\r\n      display: none;\r\n    }\r\n  }\r\n}",".section-decor {\r\n  position: relative;\r\n  z-index: 11;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n  -ms-flex-direction: column;\r\n  flex-direction: column;\r\n\r\n  &__wrapper {\r\n    flex-grow: 1;\r\n    width: 100%;\r\n  }\r\n\r\n  &__bg,\r\n  &__img {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  &__bg {\r\n    height: 100%;\r\n  }\r\n\r\n  &__img {\r\n    height: auto;\r\n  }\r\n}",".details {\r\n\r\n  &__list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    column-gap: 70px;\r\n    margin-top: 145px;\r\n    min-width: 430px;\r\n  }\r\n\r\n  &__item {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    flex-basis: calc((100% - 70px) / 2);\r\n\r\n    svg {\r\n      flex-shrink: 0;\r\n    }\r\n  }\r\n}"]}